---
import { Image } from "astro:assets";

import quoteImg from "../../assets/quote.png";
import waveImgDesktop from "../../assets/wave_desktop.png";
import waveImgMobile from "../../assets/wave_mobile.png";
import waveImgMobile2 from "../../assets/wave_mobile_2.png";
import waveImgMobile3 from "../../assets/wave_mobile_3.png";
import waveImgMobile4 from "../../assets/wave_mobile_4.png";

import Breadcrumb from "../Breadcrumb.astro";

interface HeroBannerProps {
  id: string;
  item: {
    image_mobile?: {
      id: string;
      description: string;
    };
    image_desktop?: {
      id: string;
      description: string;
    };
    is_home_page: boolean;
    breadcrumb?: string;
    texte?: string;
    auteur?: string;
    content: string;
  };
  slug: string;
  pageTitle: string;
}

const {
  item: {
    image_mobile,
    image_desktop,
    is_home_page,
    texte,
    auteur,
    breadcrumb,
    content,
  },
  slug,
  pageTitle,
} = Astro.props as HeroBannerProps;

const heightLarge = is_home_page ? "600px" : "460px";

const DIRECTUS_BASE = import.meta.env.PUBLIC_DIRECTUS_URL;

const makeSrcSet = (
  id: string,
  widths: number[],
  format: "webp" | "avif" = "webp",
  quality: number | ((w: number) => number) = 75
) =>
  widths
    .map((w) => {
      const q = typeof quality === "function" ? quality(w) : quality;
      return `${DIRECTUS_BASE}/assets/${id}?width=${w}&format=${format}&quality=${q} ${w}w`;
    })
    .join(", ");

// Responsive width candidates for each breakpoint
const mobileWidths = [
  320, 360, 420, 480, 560, 640, 720, 768, 840, 960, 992,
];
// Desktop candidates must also cover widths right above 768px since desktop source matches there
const desktopWidths = [768, 840, 960, 992, 1200, 1280, 1440];
// Hero banner spans full viewport width up to 1440px
const sizes = "(min-width: 1440px) 1440px, 100vw";
---

{
  image_mobile && image_desktop ? (
    <Fragment slot="head">
      {/** Preload AVIF (primary format on modern browsers) */}
      <link
        rel="preload"
        as="image"
        imagesrcset={makeSrcSet(
          image_desktop.id,
          desktopWidths,
          "avif",
          (w) => (w >= 960 ? 55 : w >= 720 ? 60 : 70)
        )}
        imagesizes={sizes}
        media="(min-width: 768px)"
        fetchpriority="high"
      />
      <link
        rel="preload"
        as="image"
        imagesrcset={makeSrcSet(
          image_mobile.id,
          mobileWidths,
          "avif",
          (w) => (w >= 960 ? 55 : w >= 720 ? 60 : 70)
        )}
        imagesizes={sizes}
        media="(max-width: 767px)"
        fetchpriority="high"
      />
    </Fragment>
  ) : null
}

<section class="hero-banner">
  {
    image_mobile && image_desktop ? (
      <div class="hero-banner-top">
        <picture>
          {/** Desktop, AVIF then WebP */}
          <source
            media="(min-width: 768px)"
            srcset={makeSrcSet(
              image_desktop.id,
              desktopWidths,
              "avif",
              (w) => (w >= 960 ? 55 : w >= 720 ? 60 : 70)
            )}
            sizes={sizes}
            type="image/avif"
          />
          <source
            media="(min-width: 768px)"
            srcset={makeSrcSet(image_desktop.id, desktopWidths, "webp", 75)}
            sizes={sizes}
            type="image/webp"
          />

          {/** Mobile, AVIF preferred for capable browsers */}
          <source
            srcset={makeSrcSet(
              image_mobile.id,
              mobileWidths,
              "avif",
              (w) => (w >= 960 ? 55 : w >= 720 ? 60 : 70)
            )}
            sizes={sizes}
            type="image/avif"
          />

          <img
            src={`${DIRECTUS_BASE}/assets/${image_mobile.id}?width=480&format=webp&quality=75`}
            srcset={makeSrcSet(
              image_mobile.id,
              mobileWidths,
              "webp",
              (w) => (w >= 720 ? 70 : 75)
            )}
            sizes={sizes}
            alt={image_mobile.description}
            loading="eager"
            fetchpriority="high"
            decoding="async"
            class="banner-img"
            style={`--h-lg:${heightLarge};`}
          />
        </picture>

        <svg
          class="spike"
          width="1440"
          height="40"
          viewBox="0 0 1440 40"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          aria-hidden="true"
          preserveAspectRatio="none"
        >
          <path
            d="M1440 40H0V0H1040C1079.96 0 1110.86 11.0892 1140 34C1169.14 11.0892 1200.04 0 1240 0H1440V40Z"
            fill="white"
          />
        </svg>
      </div>
    ) : null
  }

  <div class="hero-banner-bottom">
    <div class="container">
      {
        texte || auteur ? (
          <div class="hero-banner-quote-wrapper">
            <Image
              src={quoteImg}
              alt="Icone de guillemet ouvrant"
              aria-hidden="true"
              class="quote-img"
            />

            {texte ? <h1 class="hero-banner-texte">“{texte}”</h1> : null}
            {auteur ? <p class="hero-banner-author">- {auteur}</p> : null}
          </div>
        ) : null
      }

      {breadcrumb ? <Breadcrumb slug={slug} pageTitle={pageTitle} /> : null}

      {
        content ? (
          <div
            class="hero-banner-content richText container-reading-comfort"
            set:html={content}
          />
        ) : null
      }

      <picture>
        <source
          media="(min-width: 992px)"
          srcset={waveImgDesktop.src}
          type="image/webp"
        />

        <source
          media="(min-width: 768px)"
          srcset={waveImgMobile4.src}
          type="image/webp"
        />

        <source
          media="(min-width: 576px)"
          srcset={waveImgMobile3.src}
          type="image/webp"
        />

        <source
          media="(min-width: 400px)"
          srcset={waveImgMobile2.src}
          type="image/webp"
        />

        <img
          class="wave-img"
          srcset={waveImgMobile.src}
          alt=""
          loading="lazy"
        />
      </picture>
    </div>
  </div>
</section>

<style lang="scss">
  @use "../../styles/abstracts";

  $depth: 80;
  $spread: 220;
  $offset-right: 300;

  $centerX: 1440 - $offset-right;
  $start: $centerX - $spread;
  $end: $centerX + $spread;

  .hero-banner {
    .hero-banner-top {
      position: relative;
      max-width: 1440px;
      margin: auto;

      .banner-img {
        display: block;
        width: 100%;
        object-fit: cover;
        height: 280px;
      }

      .spike {
        position: absolute;
        bottom: 0;
        display: block;
        width: 100%;
        height: 15px;
      }
    }

    .hero-banner-bottom {
      .quote-img {
        width: 59px;
        height: 49px;
        position: relative;
        z-index: 1;
      }

      .hero-banner-quote-wrapper {
        margin-top: abstracts.rem(-45px);
      }

      .hero-banner-texte {
        text-align: center;
        margin: abstracts.rem(7px) 0 abstracts.rem(12px);
        @include abstracts.typography(abstracts.$font-title, 28px, 32px, 700);
      }

      .hero-banner-author {
        text-align: right;
        @include abstracts.typography(
          abstracts.$font-paragraph,
          14px,
          20px,
          700
        );
      }

      .hero-banner-content {
        :global(a) {
          text-decoration: underline;
          color: abstracts.$color-primary;

          &:hover,
          &:focus {
            text-decoration: none;
          }
        }
      }

      :global(.hero-banner-content h1) {
        margin: abstracts.rem(20px) 0 abstracts.rem(16px);
      }
    }

    .wave-img {
      margin-top: abstracts.rem(20px);
    }
  }

  @include abstracts.respond-above(md) {
    .hero-banner {
      .hero-banner-top {
        .banner-img {
          height: 380px;
        }

        .spike {
          height: 30px;
        }
      }

      .hero-banner-bottom {
        .hero-banner-quote-wrapper {
          margin-top: abstracts.rem(-60px);
        }
        .hero-banner-texte {
          @include abstracts.typography(abstracts.$font-title, 72px, 72px, 700);
        }

        .hero-banner-author {
          @include abstracts.typography(
            abstracts.$font-paragraph,
            28px,
            40px,
            700
          );
        }
      }
    }
  }

  @include abstracts.respond-above(lg) {
    .hero-banner {
      .hero-banner-top {
        .banner-img {
          height: var(--h-lg);
        }
      }

      .spike {
        height: 35px;
      }

      .wave-img {
        margin-top: abstracts.rem(40px);
      }
    }
  }

  @include abstracts.respond-above(xl) {
    .hero-banner {
      .hero-banner-top {
        .spike {
          height: 40px;
        }
      }
    }
  }
</style>
